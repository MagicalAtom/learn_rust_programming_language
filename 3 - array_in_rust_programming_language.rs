نوبت به یکی از پرطرفدار ترین و مهم ترین مباحث در دنیای برنامه نویسی رسید . 
آرایه ها . آرایه ها جایگاه مهمی در هر زبان برنامه نویسی و در تمام مبحث برنامه نویسی دارند .
این نوع دیتا تایپ در زبان rust هم وجود دارد . 
برای تعریف باید یک متغیر درست کنیم و آرایه رو داخل متغیر مورد نظر تعریف کنیم . 

let students = ["ali","reza","mohammad","mehran","amir"];

به همین ترتیب مانند دیگر زبان ها نیز برای دسترسی به خانه های این آرایه از اندیس خانه مورد نظر استفاده میکنیم . 
اندیس های آرایه منظور کلید دسترسی هر خانه از آرایه هست . که از 0 شروع شده تا اندازه تمام آرایه را در بر میگیرد . 
برای دسترسی به مقدار mohammad از خانه 0 که ali باشد شمرده و تا خانه 2  که mohammad میباشد پیش میرویم . 
و برای چاپ کردن در صفحه به همین صورت عمل میکنیم : 
let user3 = students[2];
و در نهایت 
print("{user3}")
-----------------
اما داستان به اینجا ختم نمیشود . زبان برنامه نویسی rust برای تعریف آرایه ها دست ما را بیش تر از پیش باز گذاشته است . 
برای اینکه نوع داده ای برای هر خانه آرایه تعریف کنیم یا حتی خانه های آرایه را خودکار پر کنیم . 
نکته ای که در این زبان برای تعریف نوع داده ای آرایه وجود دارد این است که آرایه یک نوع داده ای را هنگام تعریف برای هر مقادیرش قبول میکند 
به این معنی که اگر یک خانه از آرایه مورد نظر string تعریف شده تمام خانه های آرایه مورد نظر باید string باشد . هنگام تعریف نوع هم به این صورت عمل میکند که : 
  [...] = let userslist: [&str;4]
در اینجا گفتیم یک متغیر داریم که نوع تایپ اعضا این آرایه استرینگ هست و این آرایه 4 خانه دارد . 
به همین راحتی فهمیدیم که تاپل ها در این زبان برنامه نویسی میتوانند مقادیر مختلفی از نوع داده ای متفاوت دریافت کنند ولی آرایه ها در این زبان برنامه نویسی فقط مقادیر یکسان رو دریافت میکنند .
آرایه ها مثل خانه ای هستند که فقط اعضای خانواده خود را در خود جای میدهند و عضو خانواده دیگری حق ورود به این خانه را ندارد . 

نکته آخر جنریت کردن خودکار خانه های آرایه یا پر کردن خودکار خانه های آرایه بود . 
بر فرض مثال ما به یک آرایه با 5 خانه نیاز داریم که در هر خانه نوشته شده باشد 3 
این امکان در زبان برنامه نویسی rust به این صورت کار میکند : 
 let generate = [3;5];
    let lastnum = generate[generate.len() - 1];
    print!("{lastnum}");
در کد بالا ابتدا ما گفتیم که یک آرایه نیاز داریم با 5 خانه که هر خانه از آن باید حاوی عدد 3 باشد یعنی در اصل : 
[3,3,3,3,3]
بعد برای این که آخرین خانه را چاپ کنیم تا مقادیر را بررسی کنیم گ
فتیم که بیاد بر اساس تعداد اعضا آرایه - 1 یعنی خانه آخر چون اعضا آرایه از 0 شروع شده اما این تابع len از 1 شروع میکند با کسر 1 از تعداد اعضا آرایه به آخرین خانه دسترسی پیدا کردیم . 

و در آخر هم مقدار آخر را چاپ کردیم . 

موفق باشید






